######### CODE CELL 1 #########
Module(
    body=[
        Import(
            names=[
                alias(name='numpy', asname='np')]),
        Import(
            names=[
                alias(name='matplotlib.pyplot', asname='plt')])],
    type_ignores=[])
######### CODE CELL 2 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='npts', ctx=Store())],
            value=Constant(value=15)),
        Assign(
            targets=[
                Name(id='xmin', ctx=Store())],
            value=Constant(value=0)),
        Assign(
            targets=[
                Name(id='xmax', ctx=Store())],
            value=Constant(value=1.7)),
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='linspace',
                    ctx=Load()),
                args=[
                    Name(id='xmin', ctx=Load()),
                    Name(id='xmax', ctx=Load()),
                    Name(id='npts', ctx=Load())],
                keywords=[])),
        Assign(
            targets=[
                Name(id='y', ctx=Store())],
            value=BinOp(
                left=BinOp(
                    left=Name(id='x', ctx=Load()),
                    op=Add(),
                    right=BinOp(
                        left=Name(id='x', ctx=Load()),
                        op=Pow(),
                        right=Constant(value=2))),
                op=Add(),
                right=BinOp(
                    left=Name(id='x', ctx=Load()),
                    op=Pow(),
                    right=Constant(value=3)))),
        Assign(
            targets=[
                Name(id='y', ctx=Store())],
            value=BinOp(
                left=Name(id='y', ctx=Load()),
                op=Add(),
                right=Call(
                    func=Attribute(
                        value=Attribute(
                            value=Name(id='np', ctx=Load()),
                            attr='random',
                            ctx=Load()),
                        attr='normal',
                        ctx=Load()),
                    args=[
                        Constant(value=0),
                        Constant(value=0.4),
                        Name(id='npts', ctx=Load())],
                    keywords=[]))),
        Assign(
            targets=[
                Name(id='dy', ctx=Store())],
            value=BinOp(
                left=Constant(value=0.1),
                op=Add(),
                right=Call(
                    func=Attribute(
                        value=Name(id='np', ctx=Load()),
                        attr='abs',
                        ctx=Load()),
                    args=[
                        Call(
                            func=Attribute(
                                value=Attribute(
                                    value=Name(id='np', ctx=Load()),
                                    attr='random',
                                    ctx=Load()),
                                attr='normal',
                                ctx=Load()),
                            args=[
                                Constant(value=0),
                                Constant(value=0.4),
                                Name(id='npts', ctx=Load())],
                            keywords=[])],
                    keywords=[])))],
    type_ignores=[])
######### CODE CELL 3 #########
Module(
    body=[
        Expr(
            value=Call(
                func=Attribute(
                    value=Attribute(
                        value=Name(id='plt', ctx=Load()),
                        attr='rcParams',
                        ctx=Load()),
                    attr='update',
                    ctx=Load()),
                args=[
                    Dict(
                        keys=[
                            Constant(value='font.size')],
                        values=[
                            Constant(value=15)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='k.'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Dep Variable')],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 4 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='polynomial_degree', ctx=Store())],
            value=Constant(value=1)),
        Assign(
            targets=[
                Name(id='p', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='polyfit',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load()),
                    Name(id='polynomial_degree', ctx=Load())],
                keywords=[
                    keyword(
                        arg='w',
                        value=BinOp(
                            left=Constant(value=1),
                            op=Div(),
                            right=Name(id='dy', ctx=Load())))])),
        Assign(
            targets=[
                Name(id='f', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='poly1d',
                    ctx=Load()),
                args=[
                    Name(id='p', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='k.'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Call(
                        func=Name(id='f', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value='r-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Dep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='legend',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value='Fit'),
                            Constant(value='Data')],
                        ctx=Load())],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 5 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='polynomial_degree', ctx=Store())],
            value=Constant(value=1)),
        Assign(
            targets=[
                Name(id='p_no_unc', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='polyfit',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load()),
                    Name(id='polynomial_degree', ctx=Load())],
                keywords=[])),
        Assign(
            targets=[
                Name(id='f_no_unc', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='poly1d',
                    ctx=Load()),
                args=[
                    Name(id='p_no_unc', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='k.'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Call(
                        func=Name(id='f_no_unc', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value='r-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Dep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='legend',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value='Fit'),
                            Constant(value='Data')],
                        ctx=Load())],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 6 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='polynomial_degree', ctx=Store())],
            value=Constant(value=2)),
        Assign(
            targets=[
                Name(id='p_parabola', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='polyfit',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load()),
                    Name(id='polynomial_degree', ctx=Load())],
                keywords=[
                    keyword(
                        arg='w',
                        value=BinOp(
                            left=Constant(value=1),
                            op=Div(),
                            right=Name(id='dy', ctx=Load())))])),
        Assign(
            targets=[
                Name(id='f_parabola', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='poly1d',
                    ctx=Load()),
                args=[
                    Name(id='p_parabola', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='k.'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Call(
                        func=Name(id='f_parabola', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value='r-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Call(
                        func=Name(id='f', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value='g-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Dep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='legend',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value='Parabola'),
                            Constant(value='Linear'),
                            Constant(value='Data')],
                        ctx=Load())],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 7 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='polynomial_degree', ctx=Store())],
            value=Constant(value=3)),
        Assign(
            targets=[
                Name(id='p_cubic', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='polyfit',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load()),
                    Name(id='polynomial_degree', ctx=Load())],
                keywords=[
                    keyword(
                        arg='w',
                        value=BinOp(
                            left=Constant(value=1),
                            op=Div(),
                            right=Name(id='dy', ctx=Load())))])),
        Assign(
            targets=[
                Name(id='f_cubic', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='poly1d',
                    ctx=Load()),
                args=[
                    Name(id='p_cubic', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='k.'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Call(
                        func=Name(id='f_cubic', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value='b-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Call(
                        func=Name(id='f_parabola', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value='r-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Call(
                        func=Name(id='f', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value='g-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Dep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='legend',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value='Cubic'),
                            Constant(value='Parabola'),
                            Constant(value='Linear'),
                            Constant(value='Data')],
                        ctx=Load())],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 8 #########
Module(
    body=[
        FunctionDef(
            name='chi2',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='data'),
                    arg(arg='unc'),
                    arg(arg='model')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='N', ctx=Store())],
                    value=BinOp(
                        left=Constant(value=1.0),
                        op=Mult(),
                        right=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='data', ctx=Load())],
                            keywords=[]))),
                Assign(
                    targets=[
                        Name(id='result', ctx=Store())],
                    value=BinOp(
                        left=Call(
                            func=Attribute(
                                value=Name(id='np', ctx=Load()),
                                attr='sum',
                                ctx=Load()),
                            args=[
                                BinOp(
                                    left=BinOp(
                                        left=BinOp(
                                            left=Name(id='data', ctx=Load()),
                                            op=Sub(),
                                            right=Name(id='model', ctx=Load())),
                                        op=Pow(),
                                        right=Constant(value=2)),
                                    op=Div(),
                                    right=BinOp(
                                        left=Name(id='unc', ctx=Load()),
                                        op=Pow(),
                                        right=Constant(value=2)))],
                            keywords=[]),
                        op=Div(),
                        right=Name(id='N', ctx=Load()))),
                Return(
                    value=Name(id='result', ctx=Load()))],
            decorator_list=[])],
    type_ignores=[])
######### CODE CELL 9 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='linear_chi2', ctx=Store())],
            value=Call(
                func=Name(id='chi2', ctx=Load()),
                args=[
                    Name(id='y', ctx=Load()),
                    Name(id='dy', ctx=Load()),
                    Call(
                        func=Name(id='f', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[])],
                keywords=[])),
        Assign(
            targets=[
                Name(id='parab_chi2', ctx=Store())],
            value=Call(
                func=Name(id='chi2', ctx=Load()),
                args=[
                    Name(id='y', ctx=Load()),
                    Name(id='dy', ctx=Load()),
                    Call(
                        func=Name(id='f_parabola', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[])],
                keywords=[])),
        Assign(
            targets=[
                Name(id='cubic_chi2', ctx=Store())],
            value=Call(
                func=Name(id='chi2', ctx=Load()),
                args=[
                    Name(id='y', ctx=Load()),
                    Name(id='dy', ctx=Load()),
                    Call(
                        func=Name(id='f_cubic', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='The chi^2 value of the linear model is: '),
                    Name(id='linear_chi2', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='The chi^2 value of the parabolic model is: '),
                    Name(id='parab_chi2', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='The chi^2 value of the cubic model is: '),
                    Name(id='cubic_chi2', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 10 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='res_linear', ctx=Store())],
            value=BinOp(
                left=Name(id='y', ctx=Load()),
                op=Sub(),
                right=Call(
                    func=Name(id='f', ctx=Load()),
                    args=[
                        Name(id='x', ctx=Load())],
                    keywords=[]))),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='res_linear', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='ko'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    BinOp(
                        left=Constant(value=0),
                        op=Mult(),
                        right=Name(id='x', ctx=Load())),
                    Constant(value='--')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Residuals [data-model]')],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 11 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='res_parab', ctx=Store())],
            value=BinOp(
                left=Name(id='y', ctx=Load()),
                op=Sub(),
                right=Call(
                    func=Name(id='f_parabola', ctx=Load()),
                    args=[
                        Name(id='x', ctx=Load())],
                    keywords=[]))),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='res_parab', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='ko'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    BinOp(
                        left=Constant(value=0),
                        op=Mult(),
                        right=Name(id='x', ctx=Load())),
                    Constant(value='--')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Residuals [data-model]')],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 12 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='res_cubic', ctx=Store())],
            value=BinOp(
                left=Name(id='y', ctx=Load()),
                op=Sub(),
                right=Call(
                    func=Name(id='f_cubic', ctx=Load()),
                    args=[
                        Name(id='x', ctx=Load())],
                    keywords=[]))),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='res_cubic', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='ko'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    BinOp(
                        left=Constant(value=0),
                        op=Mult(),
                        right=Name(id='x', ctx=Load())),
                    Constant(value='--')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Residuals [data-model]')],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 13 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='polynomial_degree', ctx=Store())],
            value=Constant(value=30)),
        Assign(
            targets=[
                Name(id='x_fine', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='linspace',
                    ctx=Load()),
                args=[
                    Call(
                        func=Attribute(
                            value=Name(id='np', ctx=Load()),
                            attr='min',
                            ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Call(
                        func=Attribute(
                            value=Name(id='np', ctx=Load()),
                            attr='max',
                            ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value=300)],
                keywords=[])),
        Assign(
            targets=[
                Name(id='p_overfit', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='polyfit',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load()),
                    Name(id='polynomial_degree', ctx=Load())],
                keywords=[
                    keyword(
                        arg='w',
                        value=BinOp(
                            left=Constant(value=1),
                            op=Div(),
                            right=Name(id='dy', ctx=Load())))])),
        Assign(
            targets=[
                Name(id='f_overfit', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='poly1d',
                    ctx=Load()),
                args=[
                    Name(id='p_overfit', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='k.'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x_fine', ctx=Load()),
                    Call(
                        func=Name(id='f_overfit', ctx=Load()),
                        args=[
                            Name(id='x_fine', ctx=Load())],
                        keywords=[]),
                    Constant(value='b-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylim',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            UnaryOp(
                                op=USub(),
                                operand=Constant(value=2)),
                            Constant(value=10)],
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Dep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='legend',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value='Overfit!'),
                            Constant(value='Data')],
                        ctx=Load())],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 14 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='res_overfit', ctx=Store())],
            value=BinOp(
                left=Name(id='y', ctx=Load()),
                op=Sub(),
                right=Call(
                    func=Name(id='f_overfit', ctx=Load()),
                    args=[
                        Name(id='x', ctx=Load())],
                    keywords=[]))),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='res_overfit', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='dy', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='ko'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    BinOp(
                        left=Constant(value=0),
                        op=Mult(),
                        right=Name(id='x', ctx=Load())),
                    Constant(value='--')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='Indep Variable')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='Residuals [data-model]')],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 15 #########
Module(
    body=[
        Assign(
            targets=[
                Name(id='overfit_chi2', ctx=Store())],
            value=Call(
                func=Name(id='chi2', ctx=Load()),
                args=[
                    Name(id='y', ctx=Load()),
                    Name(id='dy', ctx=Load()),
                    Call(
                        func=Name(id='f_overfit', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[])],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='The chi^2 value of the overfit model is: '),
                    Name(id='overfit_chi2', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
######### CODE CELL 16 #########
Module(
    body=[
        Import(
            names=[
                alias(name='numpy', asname='np')]),
        Import(
            names=[
                alias(name='matplotlib.pyplot', asname='plt')]),
        FunctionDef(
            name='chi2',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='data'),
                    arg(arg='unc'),
                    arg(arg='model')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='N', ctx=Store())],
                    value=BinOp(
                        left=Constant(value=1.0),
                        op=Mult(),
                        right=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='data', ctx=Load())],
                            keywords=[]))),
                Assign(
                    targets=[
                        Name(id='result', ctx=Store())],
                    value=BinOp(
                        left=Call(
                            func=Attribute(
                                value=Name(id='np', ctx=Load()),
                                attr='sum',
                                ctx=Load()),
                            args=[
                                BinOp(
                                    left=BinOp(
                                        left=BinOp(
                                            left=Name(id='data', ctx=Load()),
                                            op=Sub(),
                                            right=Name(id='model', ctx=Load())),
                                        op=Pow(),
                                        right=Constant(value=2)),
                                    op=Div(),
                                    right=BinOp(
                                        left=Name(id='unc', ctx=Load()),
                                        op=Pow(),
                                        right=Constant(value=2)))],
                            keywords=[]),
                        op=Div(),
                        right=Name(id='N', ctx=Load()))),
                Return(
                    value=Name(id='result', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='array',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value=1),
                            Constant(value=2),
                            Constant(value=3),
                            Constant(value=4),
                            Constant(value=5),
                            Constant(value=6)],
                        ctx=Load())],
                keywords=[])),
        Assign(
            targets=[
                Name(id='y', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='array',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value=2.3),
                            Constant(value=4.1),
                            Constant(value=6.7),
                            Constant(value=8.3),
                            Constant(value=10.5),
                            Constant(value=13)],
                        ctx=Load())],
                keywords=[])),
        Assign(
            targets=[
                Name(id='unc', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='array',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value=0.2),
                            Constant(value=0.3),
                            Constant(value=0.1),
                            Constant(value=0.2),
                            Constant(value=0.3),
                            Constant(value=0.2)],
                        ctx=Load())],
                keywords=[])),
        Assign(
            targets=[
                Name(id='polynomial_degree', ctx=Store())],
            value=Constant(value=1)),
        Assign(
            targets=[
                Name(id='p', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='polyfit',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load()),
                    Name(id='polynomial_degree', ctx=Load())],
                keywords=[
                    keyword(
                        arg='w',
                        value=BinOp(
                            left=Constant(value=1),
                            op=Div(),
                            right=Name(id='unc', ctx=Load())))])),
        Assign(
            targets=[
                Name(id='f', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='np', ctx=Load()),
                    attr='poly1d',
                    ctx=Load()),
                args=[
                    Name(id='p', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='The fit slope is '),
                    Subscript(
                        value=Name(id='p', ctx=Load()),
                        slice=Constant(value=0),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='The fit intercept is '),
                    Subscript(
                        value=Name(id='p', ctx=Load()),
                        slice=Constant(value=1),
                        ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Constant(value='The chi-squared of this fit is '),
                    Call(
                        func=Name(id='chi2', ctx=Load()),
                        args=[
                            Name(id='y', ctx=Load()),
                            Name(id='unc', ctx=Load()),
                            Call(
                                func=Name(id='f', ctx=Load()),
                                args=[
                                    Name(id='x', ctx=Load())],
                                keywords=[])],
                        keywords=[])],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Attribute(
                        value=Name(id='plt', ctx=Load()),
                        attr='rcParams',
                        ctx=Load()),
                    attr='update',
                    ctx=Load()),
                args=[
                    Dict(
                        keys=[
                            Constant(value='font.size')],
                        values=[
                            Constant(value=15)])],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='errorbar',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Name(id='y', ctx=Load())],
                keywords=[
                    keyword(
                        arg='yerr',
                        value=Name(id='unc', ctx=Load())),
                    keyword(
                        arg='xerr',
                        value=Constant(value=None)),
                    keyword(
                        arg='fmt',
                        value=Constant(value='k.'))])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='plot',
                    ctx=Load()),
                args=[
                    Name(id='x', ctx=Load()),
                    Call(
                        func=Name(id='f', ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load())],
                        keywords=[]),
                    Constant(value='g-')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='xlabel',
                    ctx=Load()),
                args=[
                    Constant(value='x [units?]')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='ylabel',
                    ctx=Load()),
                args=[
                    Constant(value='y [units?]')],
                keywords=[])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='plt', ctx=Load()),
                    attr='legend',
                    ctx=Load()),
                args=[
                    List(
                        elts=[
                            Constant(value='Fit'),
                            Constant(value='Data')],
                        ctx=Load())],
                keywords=[]))],
    type_ignores=[])